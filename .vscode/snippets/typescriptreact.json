{
  "basic component structure": {
    "prefix": "component",
    "description": "Creates a basic skeletton for a component",
    "body": [
      "// Libraries",
      "import React from 'react';",
      "",
      "// Typings",
      "export interface Props {}",
      "export interface State {}",
      "",
      "export class ${1:ComponentName} extends React.PureComponent<Props, State> {",
      "  constructor(props) {",
      "    super(props);",
      "    this.state = {};",
      "  }",
      "",
      "  render() {",
      "    return (",
      "      <p>${1:ComponentName}</p>",
      "    );",
      "  }",
      "}",
      "",
      "export default ${1:ComponentName};",
      ""
    ]
  },
  "func-component": {
    "prefix": "func-component",
    "description": "Creates a skeleton for a functional component",
    "body": [
      "import React from 'react';",
      "",
      "interface Props {}",
      "",
      "const Component = ({ }: Props) => {",
      "  return (",
      "    <div>Hello, world!</div>",
      "  );",
      "}",
      "",
      "export default Component;",
      ""
    ]
  },
  "1i8n Block": {
    "prefix": "i18n",
    "description": "Inserts the basic building blocks for i18n in components",
    "body": [
      "// i18n",
      "import { FormattedMessage, injectIntl } from 'utils/cl-intl';",
      "import { InjectedIntlProps } from 'react-intl';",
      "import messages from '${1:./messages}';"
    ]
  },
  "styled HTML": {
    "prefix": "styled-html",
    "description": "Creates a new styled component based on a standard HTML tag",
    "body": [
      "const ${1:ComponentName} = styled.${2:div}`${3}`;"
    ]
  },
  "styled Components": {
    "prefix": "styled-comp",
    "description": "Creates a new styled component base on a React Component",
    "body": [
      "const ${1:StyledComponent} = styled(${2:OriginComponent})`${3}`;"
    ]
  },
  "imp-hook": {
    "prefix": "imp-hook",
    "description": "Import of hook",
    "body": [
      "import use${1} from 'hooks/use${1}';"
    ]
  },
  "imp-comp-lib": {
    "prefix": "imp-comp-lib",
    "description": "Imports component from 'cl2-component-library'",
    "body": [
      "import {${1}} from 'cl2-component-library';"
    ]
  },
  "imp-styled": {
    "prefix": "imp-styled",
    "description": "Imports styled from 'styled-components'",
    "body": [
      "import styled from 'styled-components';"
    ]
  },
  "imp-withrouter": {
    "prefix": "imp-withrouter",
    "description": "Imports withRouter and WithRouterProps'",
    "body": [
      "import { withRouter, WithRouterProps } from 'react-router';"

    ]
  },
  "style-utils": {
    "prefix": "style-utils",
    "description": "Imports styleutils'",
    "body": [
      "import { colors, media, fontSizes } from 'utils/styleUtils';"
    ]
  },
  "flex-full-center": {
    "prefix": "flex-full-center",
    "description": "CSS for centering with flexbox",
    "body": [
      "display: flex;",
      "justify-content: center;",
      "align-items: center;"
    ]
  },
  "flex-hor-center": {
    "prefix": "flex-hor-center",
    "description": "CSS for horizontal centering with flexbox",
    "body": [
      "display: flex;",
      "justify-content: center;"
    ]
  },
  "flex-ver-center": {
    "prefix": "flex-ver-center",
    "description": "CSS for vertical centering with flexbox",
    "body": [
      "display: flex;",
      "align-items: center;"
    ]
  },
  "use-theme": {
    "prefix": "use-theme",
    "description": "gets the 'theme' const inside your func component",
    "body": [
      "const theme: any = useTheme();"
    ]
  },
  "conlog": {
    "prefix": "conlog",
    "description": "Console log",
    "body": [
      "console.log(`${1}: ${${1}}`);"
    ]
  }
}
