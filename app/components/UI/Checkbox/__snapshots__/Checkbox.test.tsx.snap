// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox UI component renders correctly when checked 1`] = `
.c0:not(.hasLabel) {
  -webkit-flex: 0 0;
  -ms-flex: 0 0;
  flex: 0 0;
}

.c0.hasLabel {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  position: relative;
  -webkit-flex: 0 0 22px;
  -ms-flex: 0 0 22px;
  flex: 0 0 22px;
  width: 22px;
  height: 22px;
  color: #fff;
  text-align: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  border: solid 1px #aaa;
  border-radius: 3px;
  background: #04884C;
  border-color: #04884C;
  box-shadow: inset 0px 1px 1px rgba(0,0,0,0.15);
}

.c1.focused {
  outline: rgb(59,153,252) solid 2px;
}

.c1:hover {
  border-color: #04884C;
}

.c2[type='checkbox'] {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px 1px 1px 1px);
  clip: rect(1px 1px 1px 1px);
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c3 {
  position: absolute;
  fill: #fff;
  height: 55%;
}

.c4 {
  color: #596B7A;
  font-size: 16px;
  padding: 5px 0 5px 10px;
  cursor: pointer;
}

<ThemeProvider
  theme={
    Object {
      "bannerWidth": 1340,
      "borderRadius": "3px",
      "colorMain": "#ef0071",
      "colorSecondary": "#f76901",
      "colorText": "#e68f51",
      "colors": Object {
        "adminBackground": "#F0F3F4",
        "adminBorder": "#EAEAEA",
        "adminContentBackground": "#fff",
        "adminDarkestBackground": "rgba(0, 0, 0, 0.75)",
        "adminLightText": "rgba(255, 255, 255, 0.8)",
        "adminMenuBackground": "#003349",
        "adminOrangeIcons": "#FF672F",
        "adminSecondaryTextColor": "#596B7A",
        "adminSeparation": "#EAEAEA",
        "adminTextColor": "#044D6C",
        "background": "#f4f4f5",
        "clBlue": "#008292",
        "clBlueDark": "#147985",
        "clBlueDarkBg": "#d3ecf0",
        "clBlueDarker": "#0A5159",
        "clBlueDarkest": "#02282D",
        "clBlueLight": "#40B8C5",
        "clBlueLighter": "#80CFD8",
        "clBlueLightest": "#BEE7EB",
        "clDropdownHoverBackground": "#e9e9e9",
        "clGreen": "#04884C",
        "clGreenSuccess": "#008040",
        "clGreenSuccessBackground": "#e4f7ef",
        "clGreyOnGreyBackground": "#707070",
        "clIconAccent": "#01A1B1",
        "clIconBackground": "rgba(1, 161, 177, 0.07)",
        "clIconPrimary": "#00577C",
        "clIconSecondary": "#84939E",
        "clRed": "#E52516",
        "clRed2": "#FC3C2D",
        "clRedError": "#D61607",
        "clRedErrorBackground": "#fde9e8",
        "disabledPrimaryButtonBg": "#d0d0d0",
        "draftYellow": "#8C680D",
        "emailBg": "#e6ebec",
        "emailText": "#004d6c",
        "facebook": "#3b5998",
        "facebookMessenger": "#0084ff",
        "label": "#596B7A",
        "lightGreyishBlue": "#EBEDEF",
        "mediumGrey": "#BDBDBD",
        "placeholder": "#aaa",
        "placeholderBg": "#CFD6DB",
        "popoverDarkBg": "#2D2D2D",
        "popoverDarkFg": "#CBCBCB",
        "secondaryText": "#84939E",
        "separation": "#e0e0e0",
        "text": "#333",
        "twitter": "#1ea4f2",
      },
      "fontFamily": "larsseit",
      "fontSizes": Object {
        "base": 16,
        "large": 18,
        "medium": 17,
        "small": 14,
        "xl": 21,
        "xs": 12,
        "xxl": 25,
        "xxxl": 30,
        "xxxxl": 34,
        "xxxxxl": 42,
      },
      "maxPageWidth": 952,
      "menuHeight": 78,
      "menuStyle": "light",
      "mobileMenuHeight": 72,
      "mobileTopBarHeight": 66,
      "pageWidth": 1150,
      "textWidth": 720,
    }
  }
>
  <Checkbox
    checked={true}
    label="test"
    onChange={[MockFunction]}
    size="22px"
  >
    <Checkbox__Container
      className=" hasLabel"
    >
      <StyledComponent
        className=" hasLabel"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Checkbox__Container-cbcutw-0",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "&:not(.hasLabel){flex:0 0 ",
                [Function],
                ";width:",
                [Function],
                ";height:",
                [Function],
                ";}&.hasLabel{display:flex;align-items:center;}",
              ],
            },
            "displayName": "Checkbox__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Checkbox__Container-cbcutw-0",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0  hasLabel"
        >
          <Checkbox__InputWrapper
            checked={true}
            className="e2e-checkbox checked "
            onClick={[Function]}
            size="22px"
          >
            <StyledComponent
              checked={true}
              className="e2e-checkbox checked "
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Checkbox__InputWrapper-cbcutw-1",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;flex:0 0 ",
                      [Function],
                      ";width:",
                      [Function],
                      ";height:",
                      [Function],
                      ";color:#fff;text-align:center;display:flex;align-items:center;justify-content:center;cursor:pointer;border:solid 1px #aaa;border-radius:",
                      [Function],
                      ";background:",
                      [Function],
                      ";border-color:",
                      [Function],
                      ";box-shadow:inset 0px 1px 1px rgba(0,0,0,0.15);&.focused{outline:rgb(59,153,252) solid 2px;}&:hover{border-color:",
                      [Function],
                      ";}",
                    ],
                  },
                  "displayName": "Checkbox__InputWrapper",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Checkbox__InputWrapper-cbcutw-1",
                  "target": "div",
                  "toString": [Function],
                  "usesTheme": true,
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              onClick={[Function]}
              size="22px"
            >
              <div
                checked={true}
                className="c1 e2e-checkbox checked "
                onClick={[Function]}
                size="22px"
              >
                <Checkbox__Input
                  aria-checked={true}
                  defaultChecked={true}
                  id="checkbox"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                >
                  <StyledComponent
                    aria-checked={true}
                    defaultChecked={true}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Checkbox__Input-cbcutw-2",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "&[type='checkbox']{position:absolute;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px);}",
                          ],
                        },
                        "displayName": "Checkbox__Input",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Checkbox__Input-cbcutw-2",
                        "target": "input",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={
                      Object {
                        "current": .c0[type='checkbox'] {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px 1px 1px 1px);
  clip: rect(1px 1px 1px 1px);
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

<input
                          aria-checked="true"
                          checked=""
                          class="c0"
                          id="checkbox"
                          type="checkbox"
                        />,
                      }
                    }
                    id="checkbox"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    type="checkbox"
                  >
                    <input
                      aria-checked={true}
                      className="c2"
                      defaultChecked={true}
                      id="checkbox"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                  </StyledComponent>
                </Checkbox__Input>
                <Checkbox__CheckmarkIcon
                  ariaHidden={true}
                  name="checkmark"
                >
                  <StyledComponent
                    ariaHidden={true}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "compare": null,
                        "componentStyle": ComponentStyle {
                          "componentId": "Checkbox__CheckmarkIcon-cbcutw-3",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "position:absolute;fill:#fff;height:55%;",
                          ],
                        },
                        "displayName": "Checkbox__CheckmarkIcon",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Checkbox__CheckmarkIcon-cbcutw-3",
                        "target": Object {
                          "$$typeof": Symbol(react.memo),
                          "compare": null,
                          "type": [Function],
                        },
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="checkmark"
                  >
                    <Memo()
                      ariaHidden={true}
                      className="c3"
                      name="checkmark"
                    >
                      <Memo()
                        ariaHidden={true}
                        className="c3"
                        name="checkmark"
                        theme={
                          Object {
                            "adminBackground": "#F0F3F4",
                            "adminBorder": "#EAEAEA",
                            "adminContentBackground": "#fff",
                            "adminDarkestBackground": "rgba(0, 0, 0, 0.75)",
                            "adminLightText": "rgba(255, 255, 255, 0.8)",
                            "adminMenuBackground": "#003349",
                            "adminOrangeIcons": "#FF672F",
                            "adminSecondaryTextColor": "#596B7A",
                            "adminSeparation": "#EAEAEA",
                            "adminTextColor": "#044D6C",
                            "background": "#f4f4f5",
                            "clBlue": "#008292",
                            "clBlueDark": "#147985",
                            "clBlueDarkBg": "#d3ecf0",
                            "clBlueDarker": "#0A5159",
                            "clBlueDarkest": "#02282D",
                            "clBlueLight": "#40B8C5",
                            "clBlueLighter": "#80CFD8",
                            "clBlueLightest": "#BEE7EB",
                            "clDropdownHoverBackground": "#e9e9e9",
                            "clGreen": "#04884C",
                            "clGreenSuccess": "#008040",
                            "clGreenSuccessBackground": "#e4f7ef",
                            "clGreyOnGreyBackground": "#707070",
                            "clIconAccent": "#01A1B1",
                            "clIconBackground": "rgba(1, 161, 177, 0.07)",
                            "clIconPrimary": "#00577C",
                            "clIconSecondary": "#84939E",
                            "clRed": "#E52516",
                            "clRed2": "#FC3C2D",
                            "clRedError": "#D61607",
                            "clRedErrorBackground": "#fde9e8",
                            "disabledPrimaryButtonBg": "#d0d0d0",
                            "draftYellow": "#8C680D",
                            "emailBg": "#e6ebec",
                            "emailText": "#004d6c",
                            "facebook": "#3b5998",
                            "facebookMessenger": "#0084ff",
                            "label": "#596B7A",
                            "lightGreyishBlue": "#EBEDEF",
                            "mediumGrey": "#BDBDBD",
                            "placeholder": "#aaa",
                            "placeholderBg": "#CFD6DB",
                            "popoverDarkBg": "#2D2D2D",
                            "popoverDarkFg": "#CBCBCB",
                            "secondaryText": "#84939E",
                            "separation": "#e0e0e0",
                            "text": "#333",
                            "twitter": "#1ea4f2",
                          }
                        }
                        viewBox="0 0 19 15"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby="checkmark"
                          className="c3"
                          fill="none"
                          height="100%"
                          role="img"
                          viewBox="0 0 19 15"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M6.05 11.467L1.533 6.95 0 8.482l6.05 6.05 13-13L17.517 0z"
                            fillRule="evenodd"
                          />
                        </svg>
                      </Memo()>
                    </Memo()>
                  </StyledComponent>
                </Checkbox__CheckmarkIcon>
              </div>
            </StyledComponent>
          </Checkbox__InputWrapper>
          <Checkbox__Label
            htmlFor="checkbox"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Checkbox__Label-cbcutw-4",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      "color:",
                      "#596B7A",
                      ";font-size:",
                      "16",
                      "px;padding:5px 0 5px 10px;cursor:pointer;",
                    ],
                  },
                  "displayName": "Checkbox__Label",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Checkbox__Label-cbcutw-4",
                  "target": "label",
                  "toString": [Function],
                  "usesTheme": false,
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              htmlFor="checkbox"
            >
              <label
                className="c4"
                htmlFor="checkbox"
              >
                test
              </label>
            </StyledComponent>
          </Checkbox__Label>
        </div>
      </StyledComponent>
    </Checkbox__Container>
  </Checkbox>
</ThemeProvider>
`;

exports[`Checkbox UI component renders correctly when unchecked 1`] = `
.c0:not(.hasLabel) {
  -webkit-flex: 0 0;
  -ms-flex: 0 0;
  flex: 0 0;
}

.c0.hasLabel {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  position: relative;
  -webkit-flex: 0 0 22px;
  -ms-flex: 0 0 22px;
  flex: 0 0 22px;
  width: 22px;
  height: 22px;
  color: #fff;
  text-align: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  border: solid 1px #aaa;
  border-radius: 3px;
  background: #fff;
  border-color: #aaa;
  box-shadow: inset 0px 1px 1px rgba(0,0,0,0.15);
}

.c1.focused {
  outline: rgb(59,153,252) solid 2px;
}

.c1:hover {
  border-color: #333;
}

.c2[type='checkbox'] {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px 1px 1px 1px);
  clip: rect(1px 1px 1px 1px);
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c3 {
  color: #596B7A;
  font-size: 16px;
  padding: 5px 0 5px 10px;
  cursor: pointer;
}

<ThemeProvider
  theme={
    Object {
      "bannerWidth": 1340,
      "borderRadius": "3px",
      "colorMain": "#ef0071",
      "colorSecondary": "#f76901",
      "colorText": "#e68f51",
      "colors": Object {
        "adminBackground": "#F0F3F4",
        "adminBorder": "#EAEAEA",
        "adminContentBackground": "#fff",
        "adminDarkestBackground": "rgba(0, 0, 0, 0.75)",
        "adminLightText": "rgba(255, 255, 255, 0.8)",
        "adminMenuBackground": "#003349",
        "adminOrangeIcons": "#FF672F",
        "adminSecondaryTextColor": "#596B7A",
        "adminSeparation": "#EAEAEA",
        "adminTextColor": "#044D6C",
        "background": "#f4f4f5",
        "clBlue": "#008292",
        "clBlueDark": "#147985",
        "clBlueDarkBg": "#d3ecf0",
        "clBlueDarker": "#0A5159",
        "clBlueDarkest": "#02282D",
        "clBlueLight": "#40B8C5",
        "clBlueLighter": "#80CFD8",
        "clBlueLightest": "#BEE7EB",
        "clDropdownHoverBackground": "#e9e9e9",
        "clGreen": "#04884C",
        "clGreenSuccess": "#008040",
        "clGreenSuccessBackground": "#e4f7ef",
        "clGreyOnGreyBackground": "#707070",
        "clIconAccent": "#01A1B1",
        "clIconBackground": "rgba(1, 161, 177, 0.07)",
        "clIconPrimary": "#00577C",
        "clIconSecondary": "#84939E",
        "clRed": "#E52516",
        "clRed2": "#FC3C2D",
        "clRedError": "#D61607",
        "clRedErrorBackground": "#fde9e8",
        "disabledPrimaryButtonBg": "#d0d0d0",
        "draftYellow": "#8C680D",
        "emailBg": "#e6ebec",
        "emailText": "#004d6c",
        "facebook": "#3b5998",
        "facebookMessenger": "#0084ff",
        "label": "#596B7A",
        "lightGreyishBlue": "#EBEDEF",
        "mediumGrey": "#BDBDBD",
        "placeholder": "#aaa",
        "placeholderBg": "#CFD6DB",
        "popoverDarkBg": "#2D2D2D",
        "popoverDarkFg": "#CBCBCB",
        "secondaryText": "#84939E",
        "separation": "#e0e0e0",
        "text": "#333",
        "twitter": "#1ea4f2",
      },
      "fontFamily": "larsseit",
      "fontSizes": Object {
        "base": 16,
        "large": 18,
        "medium": 17,
        "small": 14,
        "xl": 21,
        "xs": 12,
        "xxl": 25,
        "xxxl": 30,
        "xxxxl": 34,
        "xxxxxl": 42,
      },
      "maxPageWidth": 952,
      "menuHeight": 78,
      "menuStyle": "light",
      "mobileMenuHeight": 72,
      "mobileTopBarHeight": 66,
      "pageWidth": 1150,
      "textWidth": 720,
    }
  }
>
  <Checkbox
    checked={false}
    label="test"
    onChange={[MockFunction]}
    size="22px"
  >
    <Checkbox__Container
      className=" hasLabel"
    >
      <StyledComponent
        className=" hasLabel"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Checkbox__Container-cbcutw-0",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "&:not(.hasLabel){flex:0 0 ",
                [Function],
                ";width:",
                [Function],
                ";height:",
                [Function],
                ";}&.hasLabel{display:flex;align-items:center;}",
              ],
            },
            "displayName": "Checkbox__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Checkbox__Container-cbcutw-0",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0  hasLabel"
        >
          <Checkbox__InputWrapper
            checked={false}
            className="e2e-checkbox  "
            onClick={[Function]}
            size="22px"
          >
            <StyledComponent
              checked={false}
              className="e2e-checkbox  "
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Checkbox__InputWrapper-cbcutw-1",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;flex:0 0 ",
                      [Function],
                      ";width:",
                      [Function],
                      ";height:",
                      [Function],
                      ";color:#fff;text-align:center;display:flex;align-items:center;justify-content:center;cursor:pointer;border:solid 1px #aaa;border-radius:",
                      [Function],
                      ";background:",
                      [Function],
                      ";border-color:",
                      [Function],
                      ";box-shadow:inset 0px 1px 1px rgba(0,0,0,0.15);&.focused{outline:rgb(59,153,252) solid 2px;}&:hover{border-color:",
                      [Function],
                      ";}",
                    ],
                  },
                  "displayName": "Checkbox__InputWrapper",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Checkbox__InputWrapper-cbcutw-1",
                  "target": "div",
                  "toString": [Function],
                  "usesTheme": true,
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              onClick={[Function]}
              size="22px"
            >
              <div
                checked={false}
                className="c1 e2e-checkbox  "
                onClick={[Function]}
                size="22px"
              >
                <Checkbox__Input
                  aria-checked={false}
                  defaultChecked={false}
                  id="checkbox"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                >
                  <StyledComponent
                    aria-checked={false}
                    defaultChecked={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Checkbox__Input-cbcutw-2",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "&[type='checkbox']{position:absolute;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px);}",
                          ],
                        },
                        "displayName": "Checkbox__Input",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Checkbox__Input-cbcutw-2",
                        "target": "input",
                        "toString": [Function],
                        "usesTheme": false,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={
                      Object {
                        "current": .c0[type='checkbox'] {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px 1px 1px 1px);
  clip: rect(1px 1px 1px 1px);
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

<input
                          aria-checked="false"
                          class="c0"
                          id="checkbox"
                          type="checkbox"
                        />,
                      }
                    }
                    id="checkbox"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    type="checkbox"
                  >
                    <input
                      aria-checked={false}
                      className="c2"
                      defaultChecked={false}
                      id="checkbox"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                  </StyledComponent>
                </Checkbox__Input>
              </div>
            </StyledComponent>
          </Checkbox__InputWrapper>
          <Checkbox__Label
            htmlFor="checkbox"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Checkbox__Label-cbcutw-4",
                    "isStatic": false,
                    "lastClassName": "c3",
                    "rules": Array [
                      "color:",
                      "#596B7A",
                      ";font-size:",
                      "16",
                      "px;padding:5px 0 5px 10px;cursor:pointer;",
                    ],
                  },
                  "displayName": "Checkbox__Label",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Checkbox__Label-cbcutw-4",
                  "target": "label",
                  "toString": [Function],
                  "usesTheme": false,
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              htmlFor="checkbox"
            >
              <label
                className="c3"
                htmlFor="checkbox"
              >
                test
              </label>
            </StyledComponent>
          </Checkbox__Label>
        </div>
      </StyledComponent>
    </Checkbox__Container>
  </Checkbox>
</ThemeProvider>
`;
